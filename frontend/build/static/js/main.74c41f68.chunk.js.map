{"version":3,"sources":["components/FormView.js","components/Question.js","components/Search.js","components/QuestionView.js","components/Header.js","components/QuizView.js","App.js","index.js"],"names":["FormView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitQuestion","event","preventDefault","$","ajax","url","type","dataType","contentType","data","JSON","stringify","question","state","answer","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","alert","handleChange","setState","defineProperty","target","name","value","categories","_this2","react_default","a","createElement","id","className","onSubmit","onChange","map","key","Component","Question","visibleAnswer","_this$props","alt","concat","undefined","toLowerCase","src","onClick","questionAction","flipVisibility","style","visibility","Search","query","getInfo","submitSearch","handleInputChange","search","placeholder","ref","input","QuestionView","getQuestions","page","console","log","questions","totalQuestions","total_questions","currentCategory","current_category","getByCategory","searchTerm","action","window","confirm","num","_this3","pageNumbers","maxPage","Math","ceil","_loop","i","push","selectPage","_this4","components_Search","q","ind","components_Question","createPagination","Header","uri","location","href","origin","navTo","QuizView","selectCategory","_ref","quizCategory","getNextQuestion","previousQuestions","toConsumableArray","currentQuestion","previous_questions","quiz_category","showAnswer","guess","forceEnd","submitGuess","evaluate","evaluateAnswer","numCorrect","restartGame","formatGuess","replace","split","every","el","includes","toString","length","renderFinalScore","renderCorrectAnswer","renderPlay","renderPrePlay","App","components_Header","path","react_router_dom","react_router","exact","component","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.74c41f68.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      question: '',\n      answer: '',\n      difficulty: 1,\n      category: 1,\n      categories: [],\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: `/categories`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        this.setState({ categories: result.categories }); \n        return;\n      },\n      error: (error) => {\n        alert('Unable to load categories. Please try your request again');\n        return;\n      },\n    });\n  }\n\n  submitQuestion = (event) => {\n    event.preventDefault();\n    $.ajax({\n      url: '/questions', //TODO: update request URL\n      type: 'POST',\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        question: this.state.question,\n        answer: this.state.answer,\n        difficulty: this.state.difficulty,\n        category: this.state.category,\n      }),\n      xhrFields: {\n        withCredentials: true,\n      },\n      crossDomain: true,\n      success: (result) => {\n        document.getElementById('add-question-form').reset();\n        return;\n      },\n      error: (error) => {\n        alert('Unable to add question. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    return (\n      <div id='add-form'>\n        <h2>Add a New Trivia Question</h2>\n        <form\n          className='form-view'\n          id='add-question-form'\n          onSubmit={this.submitQuestion}\n        >\n          <label>\n            Question\n            <input type='text' name='question' onChange={this.handleChange} />\n          </label>\n          <label>\n            Answer\n            <input type='text' name='answer' onChange={this.handleChange} />\n          </label>\n          <label>\n            Difficulty\n            <select name='difficulty' onChange={this.handleChange}>\n              <option value='1'>1</option>\n              <option value='2'>2</option>\n              <option value='3'>3</option>\n              <option value='4'>4</option>\n              <option value='5'>5</option>\n            </select>\n          </label>\n          <label>\n            Category\n            <select name='category' onChange={this.handleChange}>\n              {this.state.categories.map((category) => {\n                return (\n                  <option key={category.id} value={category.id}>\n                    {category.type}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n          <input type='submit' className='button' value='Submit' />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FormView;\n","import React, { Component } from 'react';\nimport '../stylesheets/Question.css';\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      visibleAnswer: false,\n    };\n  }\n\n  flipVisibility() {\n    this.setState({ visibleAnswer: !this.state.visibleAnswer });\n  }\n\n  render() {\n    const { question, answer, category, difficulty } = this.props;\n    return (\n      <div className='Question-holder'>\n        <div className='Question'>{question}</div>\n        <div className='Question-status'>\n          <img\n            className='category'\n            alt={`${category !== undefined? category.type.toLowerCase() : ''}`}\n            src={`${category !== undefined? category.type.toLowerCase() : ''}.svg`}\n          />\n          <div className='difficulty'>Difficulty: {difficulty}</div>\n          <img\n            src='delete.png'\n            alt='delete'\n            className='delete'\n            onClick={() => this.props.questionAction('DELETE')}\n          />\n        </div>\n        <div\n          className='show-answer button'\n          onClick={() => this.flipVisibility()}\n        >\n          {this.state.visibleAnswer ? 'Hide' : 'Show'} Answer\n        </div>\n        <div className='answer-holder'>\n          <span\n            style={{\n              visibility: this.state.visibleAnswer ? 'visible' : 'hidden',\n            }}\n          >\n            Answer: {answer}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Question;\n","import React, { Component } from 'react';\n\nclass Search extends Component {\n  state = {\n    query: '',\n  };\n\n  getInfo = (event) => {\n    event.preventDefault();\n    this.props.submitSearch(this.state.query);\n  };\n\n  handleInputChange = () => {\n    this.setState({\n      query: this.search.value,\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.getInfo}>\n        <input\n          placeholder='Search questions...'\n          ref={(input) => (this.search = input)}\n          onChange={this.handleInputChange}\n        />\n        <input type='submit' value='Submit' className='button' />\n      </form>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\n\nclass QuestionView extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: [],\n      currentCategory: null,\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  getQuestions = () => {\n    $.ajax({\n      url: `/questions?page=${this.state.page}`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        console.log(result)\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          categories: result.categories,\n          currentCategory: result.current_category,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  selectPage(num) {\n    this.setState({ page: num }, () => this.getQuestions());\n  }\n\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push(\n        <span\n          key={i}\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\n          onClick={() => {\n            this.selectPage(i);\n          }}\n        >\n          {i}\n        </span>\n      );\n    }\n    return pageNumbers;\n  }\n\n  getByCategory = (id) => {\n    $.ajax({\n      url: `/categories/${id}/questions`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          total_questions: result.total_questions,\n          currentCategory: result.currentCategory,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  submitSearch = (searchTerm) => {\n    $.ajax({\n      url: `/questions/search`, //TODO: update request URL\n      type: 'POST',\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({ searchTerm: searchTerm }),\n      xhrFields: {\n        withCredentials: true,\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          total_questions: result.total_questions,\n          currentCategory: result.current_category,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  questionAction = (id) => (action) => {\n    if (action === 'DELETE') {\n      if (window.confirm('are you sure you want to delete the question?')) {\n        $.ajax({\n          url: `/questions/${id}`, //TODO: update request URL\n          type: 'DELETE',\n          success: (result) => {\n            this.getQuestions();\n          },\n          error: (error) => {\n            alert('Unable to load questions. Please try your request again');\n            return;\n          },\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className='question-view'>\n        <div className='categories-list'>\n          <h2\n            onClick={() => {\n              this.getQuestions();\n            }}\n          >\n            Categories\n          </h2>\n          <ul>\n            {this.state.categories.map((category) => (\n              \n              <li\n                key={category.id}\n                onClick={() => {\n                  this.getByCategory(category.id);\n                }}\n              > \n                {category.type}\n                <img\n                  className='category'\n                  alt={`${category.type}`}\n                  src={`${category.type}.svg`}\n                />\n              </li>\n            ))}\n          </ul>\n          <Search submitSearch={this.submitSearch} />\n        </div>\n        <div className='questions-list'>\n          <h2>Questions</h2>\n          {this.state.questions.map((q, ind) => (\n            <Question\n              key={q.id}\n              question={q.question}\n              answer={q.answer}\n              category={this.state.categories[q.category - 1]}\n              difficulty={q.difficulty}\n              questionAction={this.questionAction(q.id)}\n            />\n          ))}\n          <div className='pagination-menu'>{this.createPagination()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuestionView;\n","import React, { Component } from 'react';\nimport '../stylesheets/Header.css';\n\nclass Header extends Component {\n  navTo(uri) {\n    window.location.href = window.location.origin + uri;\n  }\n\n  render() {\n    return (\n      <div className='App-header'>\n        <h1\n          onClick={() => {\n            this.navTo('');\n          }}\n        >\n          Udacitrivia\n        </h1>\n        <h2\n          onClick={() => {\n            this.navTo('');\n          }}\n        >\n          List\n        </h2>\n        <h2\n          onClick={() => {\n            this.navTo('/add');\n          }}\n        >\n          Add\n        </h2>\n        <h2\n          onClick={() => {\n            this.navTo('/play');\n          }}\n        >\n          Play\n        </h2>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/QuizView.css';\n\nconst questionsPerPlay = 5;\n\nclass QuizView extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      quizCategory: null,\n      previousQuestions: [],\n      showAnswer: false,\n      categories: [],\n      numCorrect: 0,\n      currentQuestion: {},\n      guess: '',\n      forceEnd: false,\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: `/categories`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        this.setState({ categories: result.categories });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load categories. Please try your request again');\n        return;\n      },\n    });\n  }\n\n  selectCategory = ({ type, id }) => {\n    this.setState({ quizCategory: { type, id } }, this.getNextQuestion);\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  getNextQuestion = () => {\n    const previousQuestions = [...this.state.previousQuestions];\n    if (this.state.currentQuestion.id) {\n      previousQuestions.push(this.state.currentQuestion.id);\n    }\n\n    $.ajax({\n      url: '/quizzes', //TODO: update request URL\n      type: 'POST',\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        previous_questions: previousQuestions,\n        quiz_category: this.state.quizCategory,\n      }),\n      xhrFields: {\n        withCredentials: true,\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          showAnswer: false,\n          previousQuestions: previousQuestions,\n          currentQuestion: result.question,\n          guess: '',\n          forceEnd: result.question.id ? false : true,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load question. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  submitGuess = (event) => {\n    event.preventDefault();\n    let evaluate = this.evaluateAnswer();\n    this.setState({\n      numCorrect: !evaluate ? this.state.numCorrect : this.state.numCorrect + 1,\n      showAnswer: true,\n    });\n  };\n\n  restartGame = () => {\n    this.setState({\n      quizCategory: null,\n      previousQuestions: [],\n      showAnswer: false,\n      numCorrect: 0,\n      currentQuestion: {},\n      guess: '',\n      forceEnd: false,\n    });\n  };\n\n  renderPrePlay() {\n    return (\n      <div className='quiz-play-holder'>\n        <div className='choose-header'>Choose Category</div>\n        <div className='category-holder'>\n          <div className='play-category' onClick={this.selectCategory}>\n            ALL\n          </div>\n          {this.state.categories.map(category => {\n            return (\n              <div\n                key={category.id}\n                value={category.id}\n                className='play-category'\n                onClick={() =>\n                  this.selectCategory({ type: (category.type, category.id.toString()) })\n                }\n              >\n                {category.type}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderFinalScore() {\n    return (\n      <div className='quiz-play-holder'>\n        <div className='final-header'>\n          Your Final Score is {this.state.numCorrect}\n        </div>\n        <div className='play-again button' onClick={this.restartGame}>\n          Play Again?\n        </div>\n      </div>\n    );\n  }\n\n  evaluateAnswer = () => {\n    const formatGuess = this.state.guess\n      // eslint-disable-next-line\n      .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '')\n      .toLowerCase();\n    const answerArray = this.state.currentQuestion.answer\n      .toLowerCase()\n      .split(' ');\n    return answerArray.every((el) => formatGuess.includes(el));\n  };\n\n  renderCorrectAnswer() {\n    let evaluate = this.evaluateAnswer();\n    return (\n      <div className='quiz-play-holder'>\n        <div className='quiz-question'>\n          {this.state.currentQuestion.question}\n        </div>\n        <div className={`${evaluate ? 'correct' : 'wrong'}`}>\n          {evaluate ? 'You were correct!' : 'You were incorrect'}\n        </div>\n        <div className='quiz-answer'>{this.state.currentQuestion.answer}</div>\n        <div className='next-question button' onClick={this.getNextQuestion}>\n          {' '}\n          Next Question{' '}\n        </div>\n      </div>\n    );\n  }\n\n  renderPlay() {\n    return this.state.previousQuestions.length === questionsPerPlay ||\n      this.state.forceEnd ? (\n      this.renderFinalScore()\n    ) : this.state.showAnswer ? (\n      this.renderCorrectAnswer()\n    ) : (\n      <div className='quiz-play-holder'>\n        <div className='quiz-question'>\n          {this.state.currentQuestion.question}\n        </div>\n        <form onSubmit={this.submitGuess}>\n          <input type='text' name='guess' onChange={this.handleChange} />\n          <input\n            className='submit-guess button'\n            type='submit'\n            value='Submit Answer'\n          />\n        </form>\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.quizCategory ? this.renderPlay() : this.renderPrePlay();\n  }\n}\n\nexport default QuizView;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './stylesheets/App.css';\nimport FormView from './components/FormView';\nimport QuestionView from './components/QuestionView';\nimport Header from './components/Header';\nimport QuizView from './components/QuizView';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Header path />\n        <Router>\n          <Switch>\n            <Route path='/' exact component={QuestionView} />\n            <Route path='/add' component={FormView} />\n            <Route path='/play' component={QuizView} />\n            <Route component={QuestionView} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}